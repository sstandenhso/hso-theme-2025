// WordPress webpack config.
const defaultConfig = require( '@wordpress/scripts/config/webpack.config' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );
const CssMinimizerPlugin = require("css-minimizer-webpack-plugin");

// Utilities.
const path = require( 'path' );
const glob = require( 'glob' );

// Add any a new entry point by extending the webpack config.
module.exports = {
	...defaultConfig,
    optimization: {
        minimizer: [
          // For webpack@5 you can use the `...` syntax to extend existing minimizers (i.e. `terser-webpack-plugin`), uncomment the next line
          // `...`,
          new CssMinimizerPlugin(),
        ],
      },
	...{
		entry: {
            //css
			'css/theme': path.resolve( process.cwd(), 'src/scss', 'theme.scss' ),
            //js
            'js/alert': path.resolve( process.cwd(), 'src/js', 'alert.js' ),
            'js/animation': path.resolve( process.cwd(), 'src/js', 'animation.js' ),
            'js/code': path.resolve( process.cwd(), 'src/js', 'code.js' ),
            'js/dropdown': path.resolve( process.cwd(), 'src/js', 'dropdown.js' ),
            'js/faq': path.resolve( process.cwd(), 'src/js', 'faq.js' ),
            'js/fullpage': path.resolve( process.cwd(), 'src/js', 'fullpage.js' ),
            'js/map': path.resolve( process.cwd(), 'src/js', 'map.js' ),
            'js/modal': path.resolve( process.cwd(), 'src/js', 'modal.js' ),
            'js/navbar': path.resolve( process.cwd(), 'src/js', 'navbar.js' ),
            'js/newsletter': path.resolve( process.cwd(), 'src/js', 'newsletter.js' ),
            'js/polyfill': path.resolve( process.cwd(), 'src/js', 'newsletter.js' ),
            'js/slider': path.resolve( process.cwd(), 'src/js', 'slider.js' ),
            'js/testimonials': path.resolve( process.cwd(), 'src/js', 'testimonials.js' ),
            'js/year': path.resolve( process.cwd(), 'src/js', 'year.js' )
		},
		plugins: [
			// Include WP's plugin config.
			...defaultConfig.plugins,

			// Removes the empty `.js` files generated by webpack but
			// sets it after WP has generated its `*.asset.php` file.
			new RemoveEmptyScriptsPlugin( {
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS
			} )
		]
	},
    stats: {
        errorDetails: true
    }
};