{"version":3,"file":"js/map.js","mappings":";;;;;AAAA;AACA;AACA;AACA;;AAEa;;AAEb,CAAC,YAAW;EAEV;EACA;;EAEA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,gBAAgB,CAAC;;EAEtD;EACA;;EAEA,SAASC,OAAOA,CAACC,IAAI,EAAE;IAErB;IACA,IAAIC,IAAI,GAAGC,QAAQ,CAACF,IAAI,CAACG,YAAY,CAAC,WAAW,CAAC,CAAC;IACnD,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAACG,YAAY,CAAC,cAAc,CAAC,CAAC;IAC3D,IAAII,MAAM,GAAG,CAAC;MAAC,aAAa,EAAC,KAAK;MAAC,aAAa,EAAC,eAAe;MAAC,SAAS,EAAC,CAAC;QAAC,QAAQ,EAAC;MAAM,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,KAAK;MAAC,aAAa,EAAC,iBAAiB;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,KAAK;MAAC,aAAa,EAAC,aAAa;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC;MAAI,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,WAAW;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,WAAW;MAAC,aAAa,EAAC,eAAe;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,oBAAoB;MAAC,aAAa,EAAC,eAAe;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,KAAK;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC;MAAK,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,MAAM;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC,CAAC;MAAG,CAAC,EAAC;QAAC,WAAW,EAAC;MAAE,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,MAAM;MAAC,aAAa,EAAC,eAAe;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,MAAM;MAAC,aAAa,EAAC,kBAAkB;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,MAAM;MAAC,aAAa,EAAC,oBAAoB;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,cAAc;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC;MAAY,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,eAAe;MAAC,aAAa,EAAC,aAAa;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC;MAAK,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,SAAS;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,YAAY,EAAC;MAAK,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,OAAO;MAAC,aAAa,EAAC,KAAK;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC,EAAC;QAAC,YAAY,EAAC;MAAI,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,OAAO;MAAC,aAAa,EAAC,eAAe;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,OAAO;MAAC,aAAa,EAAC,kBAAkB;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,EAAC;MAAC,aAAa,EAAC,OAAO;MAAC,aAAa,EAAC,oBAAoB;MAAC,SAAS,EAAC,CAAC;QAAC,OAAO,EAAC;MAAS,CAAC;IAAC,CAAC,CAAC;IACpjD,IAAIC,MAAM,GAAG;MACXC,GAAG,EAAEL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClBM,GAAG,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;;IAED;IACA,IAAIO,GAAG,GAAG,IAAIC,MAAM,CAAChB,IAAI,CAACiB,GAAG,CAACb,IAAI,EAAE;MAClCQ,MAAM,EAAEA,MAAM;MACdD,MAAM,EAAEA,MAAM;MACdN,IAAI,EAAEA;IACR,CAAC,CAAC;;IAEF;IACA,IAAIa,MAAM,GAAG,IAAIF,MAAM,CAAChB,IAAI,CAACmB,YAAY,CAAC,CAAC;;IAE3C;IACAX,OAAO,CAACY,OAAO,CAAC,UAASC,IAAI,EAAEC,CAAC,EAAEC,GAAG,EAAE;MACrC,IAAIC,QAAQ,GAAG;QACbX,GAAG,EAAEQ,IAAI,CAAC,CAAC,CAAC;QACZP,GAAG,EAAEO,IAAI,CAAC,CAAC;MACb,CAAC;MACD,IAAII,MAAM,GAAG,IAAIT,MAAM,CAAChB,IAAI,CAAC0B,MAAM,CAAC;QAClCF,QAAQ,EAAEA,QAAQ;QAClBT,GAAG,EAAEA;MACP,CAAC,CAAC;;MAEF;MACAG,MAAM,CAACS,MAAM,CAACH,QAAQ,CAAC;IACzB,CAAC,CAAC;;IAEF;IACA,IAAK,CAACnB,IAAI,EAAG;MACXU,GAAG,CAACa,SAAS,CAACV,MAAM,CAAC;IACvB;EACF;;EAEA;EACA;;EAEA;;EAEA,IAAKlB,IAAI,EAAG;IACV,EAAE,CAACoB,OAAO,CAACS,IAAI,CAAC7B,IAAI,EAAE,UAASI,IAAI,EAAE;MACnCD,OAAO,CAACC,IAAI,CAAC;IACf,CAAC,CAAC;EACJ;AAEF,CAAC,EAAE,CAAC,C","sources":["webpack://hso-theme-2024/./src/js/map.js"],"sourcesContent":["//\r\n// map.js\r\n// Theme module\r\n//\r\n\r\n'use strict';\r\n\r\n(function() {\r\n  \r\n  // Variables\r\n  // =========\r\n\r\n  var maps = document.querySelectorAll('.map-container');\r\n\r\n  // Methods\r\n  // =======\r\n\r\n  function initMap(elem) {\r\n\r\n    // Get map data\r\n    var zoom = parseInt(elem.getAttribute('data-zoom'));\r\n    var markers = JSON.parse(elem.getAttribute('data-markers'));\r\n    var styles = [{\"featureType\":\"all\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"weight\":\"2.00\"}]},{\"featureType\":\"all\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#9c9c9c\"}]},{\"featureType\":\"all\",\"elementType\":\"labels.text\",\"stylers\":[{\"visibility\":\"on\"}]},{\"featureType\":\"landscape\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#f2f2f2\"}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"landscape.man_made\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"poi\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road\",\"elementType\":\"all\",\"stylers\":[{\"saturation\":-100},{\"lightness\":45}]},{\"featureType\":\"road\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#eeeeee\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#7b7b7b\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#ffffff\"}]},{\"featureType\":\"road.highway\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"simplified\"}]},{\"featureType\":\"road.arterial\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"transit\",\"elementType\":\"all\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"elementType\":\"all\",\"stylers\":[{\"color\":\"#46bcec\"},{\"visibility\":\"on\"}]},{\"featureType\":\"water\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#c8d7d4\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"color\":\"#070707\"}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"color\":\"#ffffff\"}]}];\r\n    var center = {\r\n      lat: markers[0][0],\r\n      lng: markers[0][1]\r\n    };\r\n\r\n    // Init map\r\n    var map = new google.maps.Map(elem, {\r\n      center: center,\r\n      styles: styles,\r\n      zoom: zoom\r\n    });\r\n\r\n    // Get bounds\r\n    var bounds = new google.maps.LatLngBounds();\r\n\r\n    // Create markers\r\n    markers.forEach(function(item, i, arr) {\r\n      var position = {\r\n        lat: item[0],\r\n        lng: item[1]\r\n      };\r\n      var marker = new google.maps.Marker({\r\n        position: position,\r\n        map: map\r\n      });\r\n\r\n      // Extend bounds\r\n      bounds.extend(position);\r\n    });\r\n\r\n    // Fit markers into bounds\r\n    if ( !zoom ) {\r\n      map.fitBounds(bounds);\r\n    }\r\n  }\r\n\r\n  // Events\r\n  // ======\r\n\r\n  // Init map\r\n\r\n  if ( maps ) {\r\n    [].forEach.call(maps, function(elem) {\r\n      initMap(elem);\r\n    });\r\n  }\r\n\r\n})();"],"names":["maps","document","querySelectorAll","initMap","elem","zoom","parseInt","getAttribute","markers","JSON","parse","styles","center","lat","lng","map","google","Map","bounds","LatLngBounds","forEach","item","i","arr","position","marker","Marker","extend","fitBounds","call"],"sourceRoot":""}